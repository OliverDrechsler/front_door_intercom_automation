# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: ci build and test code
on:
  push:
    branches: "**"
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.12
        uses: actions/setup-python@v1
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff check --output-format=github .
        continue-on-error: true
#
#      - name: black - static security code check
#        run: |
#          pip install black
#          black --verbose camera/.
#          black --verbose config/.
#          black --verbose door/.
#          black --verbose bot/.
#          black --verbose fdia.py
#
#
#      - name: vulernability check in dependcies
#        run: |
#          pip install safety
#          safety check --full-report
          
      # - name: Run Snyk to check for vulnerabilities
      #   uses: snyk/actions/node@master
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      # - name: SonarCloud scanner
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #     # GITHUB_TOKEN: ${​{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${​{ secrets.SONAR_TOKEN }}
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      run: |
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage reports to Codecov with GitHub Action
      uses: codecov/codecov-action@v4.2.0
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}