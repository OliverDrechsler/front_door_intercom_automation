
# Generated by CodiumAI
from httpx import Auth
from messaging.receive_msg import TelegramMessages


import pytest

class TestTelegramMessages:

    # TelegramMessages instance can be initialized with a bot, blink_instance, and blink_auth_instance
    def test_initialization(self):
        bot = telepot.Bot("YOUR_TELEGRAM_TOKEN")
        blink_instance = Blink()
        blink_auth_instance = Auth()

        telegram_messages = TelegramMessages(bot, blink_instance, blink_auth_instance)

        assert isinstance(telegram_messages, TelegramMessages)

    # handle_received_message method can handle received telegram chat group messages
    def test_handle_received_message(self):
        bot = telepot.Bot("YOUR_TELEGRAM_TOKEN")
        blink_instance = Blink()
        blink_auth_instance = Auth()

        telegram_messages = TelegramMessages(bot, blink_instance, blink_auth_instance)

        msg = {
            "content_type": "text",
            "chat_type": "group",
            "chat_id": "YOUR_CHAT_ID",
            "from": {
                "first_name": "John",
                "id": "YOUR_USER_ID"
            },
            "text": "foto"
        }

        result = telegram_messages.handle_received_message(msg)

        assert result == True

    # check_received_msg_is_text method can check if received message is text
    def test_check_received_msg_is_text(self):
        bot = telepot.Bot("YOUR_TELEGRAM_TOKEN")
        blink_instance = Blink()
        blink_auth_instance = Auth()

        telegram_messages = TelegramMessages(bot, blink_instance, blink_auth_instance)

        msg = {
            "content_type": "text",
            "chat_type": "group",
            "chat_id": "YOUR_CHAT_ID",
            "from": {
                "first_name": "John",
                "id": "YOUR_USER_ID"
            },
            "text": "foto"
        }

        result = telegram_messages.check_received_msg_is_text(msg)

        assert result == True

    # handle_received_message method can return False if received message is not text
    def test_handle_received_message_not_text(self):
        bot = telepot.Bot("YOUR_TELEGRAM_TOKEN")
        blink_instance = Blink()
        blink_auth_instance = Auth()

        telegram_messages = TelegramMessages(bot, blink_instance, blink_auth_instance)

        msg = {
            "content_type": "photo",
            "chat_type": "group",
            "chat_id": "YOUR_CHAT_ID",
            "from": {
                "first_name": "John",
                "id": "YOUR_USER_ID"
            },
            "photo": [
                {
                    "file_id": "1234567890",
                    "file_size": 12345,
                    "width": 100,
                    "height": 100
                }
            ]
        }

        result = telegram_messages.handle_received_message(msg)

        assert result == False

    # check_chat_id method can return False if chat_id from received message does not match configured one
    def test_check_chat_id_not_match(self):
        bot = telepot.Bot("YOUR_TELEGRAM_TOKEN")
        blink_instance = Blink()
        blink_auth_instance = Auth()

        telegram_messages = TelegramMessages(bot, blink_instance, blink_auth_instance)

        msg = {
            "content_type": "text",
            "chat_type": "group",
            "chat_id": "WRONG_CHAT_ID",
            "from": {
                "first_name": "John",
                "id": "YOUR_USER_ID"
            },
            "text": "foto"
        }

        result = telegram_messages.handle_received_message(msg)

        assert result == False

    # check_from_id method can return False if from_id from received message does not match configured one
    def test_check_from_id_not_match(self):
        bot = telepot.Bot("YOUR_TELEGRAM_TOKEN")
        blink_instance = Blink()
        blink_auth_instance = Auth()

        telegram_messages = TelegramMessages(bot, blink_instance, blink_auth_instance)

        msg = {
            "content_type": "text",
            "chat_type": "group",
            "chat_id": "YOUR_CHAT_ID",
            "from": {
                "first_name": "John",
                "id": "WRONG_USER_ID"
            },
            "text": "foto"
        }

        result = telegram_messages.handle_received_message(msg)

        assert result == False